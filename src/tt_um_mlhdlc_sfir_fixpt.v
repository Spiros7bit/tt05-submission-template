// -------------------------------------------------------------
// 
// File Name: C:\MatlabCodes\FPGA_Lab\Test0\codegen\mlhdlc_sfir\hdlsrc\mlhdlc_sfir_fixpt.v
// Created: 2023-10-17 21:39:27
// 
// Generated by MATLAB 9.4, MATLAB Coder 4.0 and HDL Coder 3.12
// 
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Design base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// y_out                         ce_out        1
// delayed_xout                  ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: mlhdlc_sfir_fixpt
// Source Path: mlhdlc_sfir_fixpt
// Hierarchy Level: 0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module tt_um_mlhdlc_sfir_fixpt
          (clk,
           reset,
           clk_enable,
           x_in,
           h_in1,
           h_in2,
           h_in3,
           h_in4,
           ce_out,
           y_out,
           delayed_xout);


  input   clk;
  input   reset;
  input   clk_enable;
  input   signed [13:0] x_in;  // sfix14_En12
  input   signed [13:0] h_in1;  // sfix14_En15
  input   signed [13:0] h_in2;  // sfix14_En16
  input   [13:0] h_in3;  // ufix14_En16
  input   [13:0] h_in4;  // ufix14_En15
  output  ce_out;
  output  signed [13:0] y_out;  // sfix14_En12
  output  signed [13:0] delayed_xout;  // sfix14_En12


  wire enb;
  reg signed [13:0] ud1;  // sfix14_En12
  reg signed [13:0] ud2;  // sfix14_En12
  reg signed [13:0] ud3;  // sfix14_En12
  reg signed [13:0] ud4;  // sfix14_En12
  reg signed [13:0] ud5;  // sfix14_En12
  reg signed [13:0] ud6;  // sfix14_En12
  reg signed [13:0] ud7;  // sfix14_En12
  reg signed [13:0] ud8;  // sfix14_En12
  wire signed [13:0] a1;  // sfix14_En12
  wire signed [13:0] m1;  // sfix14_En14
  wire signed [27:0] p20m1_mul_temp;  // sfix28_En27
  wire signed [13:0] a2;  // sfix14_En12
  wire signed [13:0] a3;  // sfix14_En12
  wire signed [13:0] m3;  // sfix14_En14
  wire signed [14:0] p22m3_cast;  // sfix15_En16
  wire signed [28:0] p22m3_mul_temp;  // sfix29_En28
  wire signed [27:0] p22m3_cast_1;  // sfix28_En28
  wire signed [13:0] a4;  // sfix14_En11
  wire signed [14:0] p19a4_add_cast;  // sfix15_En12
  wire signed [14:0] p19a4_add_cast_1;  // sfix15_En12
  wire signed [14:0] p19a4_add_temp;  // sfix15_En12
  wire signed [13:0] m2;  // sfix14_En15
  wire signed [27:0] p21m2_mul_temp;  // sfix28_En28
  wire signed [13:0] a5;  // sfix14_En14
  wire signed [15:0] p24a5_add_cast;  // sfix16_En15
  wire signed [15:0] p24a5_add_cast_1;  // sfix16_En15
  wire signed [15:0] p24a5_add_temp;  // sfix16_En15
  wire signed [13:0] m4;  // sfix14_En13
  wire signed [14:0] p23m4_cast;  // sfix15_En15
  wire signed [28:0] p23m4_mul_temp;  // sfix29_En26
  wire signed [27:0] p23m4_cast_1;  // sfix28_En26
  wire signed [13:0] a6;  // sfix14_En12
  wire signed [15:0] p25a6_add_cast;  // sfix16_En14
  wire signed [15:0] p25a6_add_cast_1;  // sfix16_En14
  wire signed [15:0] p25a6_add_temp;  // sfix16_En14
  wire signed [16:0] p26y_out_add_cast;  // sfix17_En14
  wire signed [16:0] p26y_out_add_cast_1;  // sfix17_En14
  wire signed [16:0] p26y_out_add_temp;  // sfix17_En14


  assign enb = clk_enable;

  // HDL code generation from MATLAB function: mlhdlc_sfir_fixpt
  // 
  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  // 
  //                                                                          %
  // 
  //           Generated by MATLAB 9.4 and Fixed-Point Designer 6.1           %
  // 
  //                                                                          %
  // 
  // %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  // 
  // Symmetric FIR Filter
  always @(posedge clk or posedge reset)
    begin : ud1_reg_process
      if (reset == 1'b1) begin
        ud1 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud1 <= x_in;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : ud2_reg_process
      if (reset == 1'b1) begin
        ud2 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud2 <= ud1;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : ud3_reg_process
      if (reset == 1'b1) begin
        ud3 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud3 <= ud2;
        end
      end
    end



  // update the delay line
  always @(posedge clk or posedge reset)
    begin : ud4_reg_process
      if (reset == 1'b1) begin
        ud4 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud4 <= ud3;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : ud5_reg_process
      if (reset == 1'b1) begin
        ud5 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud5 <= ud4;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : ud6_reg_process
      if (reset == 1'b1) begin
        ud6 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud6 <= ud5;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : ud7_reg_process
      if (reset == 1'b1) begin
        ud7 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud7 <= ud6;
        end
      end
    end



  // delayout input signal
  always @(posedge clk or posedge reset)
    begin : ud8_reg_process
      if (reset == 1'b1) begin
        ud8 <= 14'sb00000000000000;
      end
      else begin
        if (enb) begin
          ud8 <= ud7;
        end
      end
    end



  assign a1 = ud1 + ud8;



  assign p20m1_mul_temp = h_in1 * a1;
  assign m1 = p20m1_mul_temp[26:13];



  assign a2 = ud2 + ud7;



  assign a3 = ud3 + ud6;



  assign p22m3_cast = {1'b0, h_in3};
  assign p22m3_mul_temp = p22m3_cast * a3;
  assign p22m3_cast_1 = p22m3_mul_temp[27:0];
  assign m3 = p22m3_cast_1[27:14];



  assign p19a4_add_cast = {ud4[13], ud4};
  assign p19a4_add_cast_1 = {ud5[13], ud5};
  assign p19a4_add_temp = p19a4_add_cast + p19a4_add_cast_1;
  assign a4 = p19a4_add_temp[14:1];



  assign p21m2_mul_temp = h_in2 * a2;
  assign m2 = p21m2_mul_temp[26:13];



  assign p24a5_add_cast = {m1[13], {m1, 1'b0}};
  assign p24a5_add_cast_1 = {{2{m2[13]}}, m2};
  assign p24a5_add_temp = p24a5_add_cast + p24a5_add_cast_1;
  assign a5 = p24a5_add_temp[14:1];



  assign p23m4_cast = {1'b0, h_in4};
  assign p23m4_mul_temp = p23m4_cast * a4;
  assign p23m4_cast_1 = p23m4_mul_temp[27:0];
  assign m4 = p23m4_cast_1[26:13];



  assign p25a6_add_cast = {{2{m3[13]}}, m3};
  assign p25a6_add_cast_1 = {m4[13], {m4, 1'b0}};
  assign p25a6_add_temp = p25a6_add_cast + p25a6_add_cast_1;
  assign a6 = p25a6_add_temp[15:2];



  // filtered output
  assign p26y_out_add_cast = {{3{a5[13]}}, a5};
  assign p26y_out_add_cast_1 = {a6[13], {a6, 2'b00}};
  assign p26y_out_add_temp = p26y_out_add_cast + p26y_out_add_cast_1;
  assign y_out = p26y_out_add_temp[15:2];



  assign ce_out = clk_enable;

  assign delayed_xout = ud8;

endmodule  // mlhdlc_sfir_fixpt

